networks:
  zxz_nginx_net:
    driver: bridge

volumes:
  upload_volume:
    driver: local
  # instance_volume:
  #   driver: local
  fhost_db_volume:
    driver: local

services:
  zxz:
    image: hienanh/zxz:latest
    container_name: zxz
    # build:
    #  context: ./
    #  dockerfile: Dockerfile
    hostname: zxz1
    env_file:
      - .env
    restart: always
    volumes:
      - ${UPLOAD_VOLUME_PATH}:/files
      - ${DB_VOLUME_PATH}:/python-docker/fhost_db.sql
    networks:
      - zxz_nginx_net
    # ports:
    #   - "8003:5000"

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    # network_mode: host # remove if use custom network
    ports:
      - "80:80"
      - "443:443"
    extra_hosts:
      - "mini:192.168.0.146"
    networks:
      - zxz_nginx_net
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro

  backup:
    image: alpine
    tty: false
    environment:
      - TARGET=${TARGET}
    volumes:
      - ${UPLOAD_VOLUME_PATH}:/upload_data
      - ${DB_VOLUME_PATH}:/fhost_db_data
      - ${BACKUP_PATH}:/backup
    command: >-
      sh -c "
        cd /upload_data && tar -czf /backup/upload_data_$${TARGET}.tar.gz *;
        cd /fhost_db_data && tar -czf /backup/fhost_db_data_$${TARGET}.tar.gz *;
        "

  restore:
    image: alpine
    environment:
      - TARGET=${TARGET}
    volumes:
      - ${UPLOAD_VOLUME_PATH}:/upload_data
      - ${DB_VOLUME_PATH}:/fhost_db_data
      - ${BACKUP_PATH}:/backup
    command: >-
      sh -c "
        rm -rf /upload_data/* /upload_data/..?* /upload_data/.[!.]*;
        rm -rf /fhost_db_data/* /fhost_db_data/..?* /fhost_db_data/.[!.]*
        tar -xzf /backup/upload_data_$${TARGET}.tar.gz -C /upload_data;
        tar -xzf /backup/fhost_db_data_$${TARGET}.tar.gz -C /fhost_db_data;
        "
